#шов обработанный/необработанный processed/unprocessed
[DEFAULT]
WHAT_TYPE_OF_STITCH = PROCESSED
VIDEO_NAME = 4
#название видео без расширения(.mp4)

[UNPROCESSED]
#НЕОБРАБОТАННЫЙ
HOW_TO_STITCH = False
#(bool) (False)(Сшивать либо до конца алгоритмами(в итоге получается пирамидка) рекомендуемый вариант.
#(True) Последний шаг объединяет несколько крупных панорам без плавного перехода шва в шов,
EVERY_COUNT = 30
#(int) с каким шагом обрезать, чем меньше видео и быстрее прокрутка тем меньше это число ( 30 для плит, 100 для шахты)
STEP = 1
#(int)Начальный шаг. лучше не трогать.
OVERLAP = 5
#(int)Перехлёст количества фото 5 - оптимальное число.
NUM_TO_STITCH = 10
#(int)Количество склеиваемых фото. Чем больше,
#тем квадратично дольше ждать и менее стабильно. 10 – оптимальное число.
NEED_TO_CLEAR_FOLDER_UNPROCESSED = True
#(bool) очистка папок с промежуточными панорамами и кадрами
[PROCESSED]
#ОБРАБОТАННЫЙ
SIZE_OF_FRAMES = 3
# то какую часть в последующем будем брать из видео(  1/size_of_frames )
AUTO_COUNT_VIDEOTHRESH = True
# (bool) считает количество кадров по изоленте. При False задается в ручную в VIDEOTRESH
# замер скорости изоленты, если True, замеряет скорость
# автоматически по СИНЕЙ изоленте в видео если False,
# необходимо рассчитать videothresh вручную

DELAY_FRAMECOUNT = -150
# задержка, чтобы пропустить остановку и т.п (-150  это простой камеры в кадрах 30*sec  )

NEED_TO_RESIZE = True
# (bool) изменение разрешения изображения. параметр, чтобы проще было сохранять

NEED_TO_CLEAR_FOLDER = False
# (bool)очистка папок с промежуточными файлами от предыдущих использований кода.

VIDEOTHRESH = 1
# (int) ДЛЯ ПОДБОРА В РУЧНУЮ. частота кадров, через которую берем их из видео из расчёта 30 кадров
# в секунду 30*время смены кадра / size_of_frames





